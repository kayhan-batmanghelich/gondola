.. raw:: html

   <!--

   ============================================================================

      DO NOT EDIT THIS FILE! It was generated using Sphinx from:

      Origin:   $URL: https://sbia-svn.uphs.upenn.edu/projects/GONDOLA/branches/gondola-1.0/doc/faq.rst $
      Revision: $Rev: 705 $

   ============================================================================

   -->

==========================
Frequently Asked Questions
==========================

How can I rank basis vectors according to importances in the classification?
----------------------------------------------------------------------------

The GONDOLA software by default does not rank the basis vectors. However, a Jython_
script named ``wekaRankBasis`` is included which can be found in the ``lib/``
directory of the installation (or ``lib/gondola`` depending on the selected
installation scheme). Note that this script requires Weka >= 3.7 with additional
packages installed. Check the :doc:`installation` instructions for details.
For usage information of this script, run it with the ``-h`` (``--help``) option.


How can I use GONDOLA inside of MATLAB?
---------------------------------------

You can use the ``gondola`` MATLAB package inside of MATLAB. Since there are some
MEX-files to compile, first build the software to make sure that these are available.
By setting the advanced CMake option ``BASIS_COMPILE_MATLAB`` to ``OFF``, you can
further request that the MATLAB sources are not being compiled using the MATLAB Compiler
even if available, but copied to the installation tree. Then, add the paths to the
MATLAB source files as well as the built (and installed) MEX-files to the MATLAB
search path. Note that you have to add the parent directory containing the
``+gondola`` subdirectory to the path, not the ``+gondola`` package directory itself.
In addition, you have to make sure that the LIBLINEAR_ MEX-files and those of
MOSEK_ (if used) are in the search path as well. When the compilation of the MATLAB
source files was skipped, i.e., the ``BASIS_COMPILE_MATLAB`` option was set to ``OFF``
during the configuration of the build system or if the MATLAB Compiler was not found,
the installed ``gondola`` package contains a ``startup.m`` file. This script calls
the ``addpath`` function of MATLAB to add the paths to the found MEX-files to the
search path. Therefore, after adding the directory to the ``gondola`` package to the
search path, run the command ``gondola.startup`` in MATLAB in order to set up the
MATLAB search path. Now you can use the ``gondola`` function within MATLAB similar
as the command-line executable.


How can I get probability of the classes instead of just class labels?
----------------------------------------------------------------------

The Jython_ scripts coming with GONDOLA are capable of producing probability
instead of class labels. However the default configuration files are generated in a
way to produce just class labels. If you are interested to probabilities,
you need to replace the ``wekaClassifier`` as the command used for the ``classify``
step in the :ref:`configuration file of the cross-validation experiments <crossvalcfg>`
by the ``wekaClassifierWithProbability`` command::

    classify:  wekaClassifierWithProbability
                      --trainArff         "%(training.featuresfile)s"
                      --testArff          "%(testing.featuresfile)s"
                      --bestClassifier    "%(classifier)s"
                      --bestParam         "%(bestparams)s"
                      --extraParam        "%(extraparams)s"
                      --trainCSV          "%(training.resultfile)s"
                      --testCSV           "%(testing.resultfile)s"
                      --hdrTrain          "%(training.resultheader)s"
                      --hdrTest           "%(testing.resultheader)s"


How can I improve the running time?
-----------------------------------

There are a few ways to make GONDOLA run faster:

a) When compiling ``gondola`` using the MATLAB Compiler (MCC), remove the
   ``-R -singleCompThread`` from the advanced ``BASIS_MCC_FLAGS`` CMake variable
   (press 't' in ``ccmake``) before building GONDOLA. This will let the
   MATLAB Compiler Runtime (MCR) use multiple threads instead of only one.

b) Make sure that there are as few useless values (e.g. air which is usually zero
   background in brain images) in the image by appropriately cropping the images using
   the bounding box of the foreground regions.

c) Use a ``downsamplingratio`` of 2 as specified by the
   :ref:`configuration file for gondola <gondolacfg>`. It is not recommended to use
   higher values unless you are dealing with very high-resolution images or if the
   resolution of the basis vectors does not matter to you.

d) To avoid the startup time of launching MATLAB, ensure that the ``gondola`` source
   files are compiled using MCC. The caching done by MCC results in shorter startup
   times after the first execution.


How can I get better interpretability?
--------------------------------------

The basis vectors (i.e. columns of B) are between zero and one but because of the scaling
of the data, they barely reach the upper bound of the feasible set (they barely have
maximum value of 1). When you overlay the basis images written by the ``gondola show``
command on top of an image, set a threshold and make the values below that threshold
transparent. You can easily do this using AFNI_ or MIPAV_ for medical images.


How can I choose the parameters?
--------------------------------

The default parameters should work for most cases. However, if you want to have a good
insight about how to choose the parameters, see the [TMI2012]_ paper.


Is multi-class classification possible with GONDOLA?
----------------------------------------------------

At the moment, GONDOLA does not fully support multi-class classification problems.


.. _AFNI: http://afni.nimh.nih.gov/afni/
.. _MIPAV: http://mipav.cit.nih.gov/
.. _Jython: http://www.jython.org/
.. _LIBLINEAR: http://www.csie.ntu.edu.tw/~cjlin/liblinear/
.. _Mosek: http://www.mosek.com/
